/*-------------------------フェード--------------------------*/
/*===========
inview
===========*/
.fadeIn {
    opacity: 0;
    transition: 2s;
}
.fadeIn.is-show, .fadeIn_02.is-show, .fadeIn_3.is-show {
    opacity: 1;
}
.fadeIn_02 {
    opacity: 0;
    transition-duration: 0.5s;
    transition-delay: 0.5s;
}
.fadeIn_3 {
    opacity: 0;
    transition: 3s;
}
.fadeIn_blur {
    opacity: 0;
    transition: 1s ease;
    filter: blur(10px);
}
.fadeIn_blur.is-show {
    opacity: 1;
    filter: blur(0px);
}
.fadeIn_2 {
    opacity: 0;
    transition-duration: 0.5s;
    transition-delay: 0.9s;
    filter: blur(10px);
}
.fadeIn_2.is-show {
    opacity: 1;
    filter: blur(0px);
}
.fadeIn_up {
    opacity: 0;
    transform: translate(0, 30%);
    transition: 0.8s;
}
.fadeIn_up.is-show {
    transform: translate(0, 0);
    opacity: 1;
}

.fadeIn_up_2 {
    opacity: 0;
    transform: translate(0, 30%);
    transition-duration: 0.5s;
    transition-delay: 0.8s;
}
.fadeIn_up_2.is-show {
    transform: translate(0, 0);
    opacity: 1;
}

.fadeIn_down {
    opacity: 0;
    transform: translate(0, -50%);
    transition-duration: 0.5s;
    transition-delay: 0.5s;
}
.fadeIn_down.is-show {
    transform: translate(0, 0);
    opacity: 1;
}
.fadeScale {
    transition: 1s;
    opacity: 0;
    transform: scale(1.5);
}
.fadeScale.is-show {
    opacity: 1;
    transform: scale(1);
}
.fadeScale_up {
    transition: 3s;
    opacity: 0;
    transform: scale(0.8);
}
.fadeScale_up.is-show {
    opacity: 1;
    transform: scale(1);
}
/*-- 左から --*/
.SlideinRight {
    transform: translate(-30%, 0);
    opacity: 0;
    transition: 3s cubic-bezier(.19, 1, .22, 1);
}
.SlideinRight.is-show {
    transform: translate(0, 0);
    opacity: 1;
}
.SlideinLeft {
    transform: translate(50%, 0);
    opacity: 0;
    transition: 3s cubic-bezier(.19, 1, .22, 1);
}
.SlideinLeft.is-show {
    transform: translate(0, 0);
    opacity: 1;
}
/*-------------------左から順番-----------------------*/
/*全共通*/

.bgextend {
    animation-name: bgextendAnimeBase;
    animation-duration: 1s;
    animation-fill-mode: forwards;
    position: relative;
    overflow: hidden;/*　はみ出た色要素を隠す　*/
    opacity: 0;
}
@keyframes bgextendAnimeBase {
from {
opacity:0;
}
to {
opacity:1;
}
}
/*中の要素*/
.bgappear {
    animation-name: bgextendAnimeSecond;
    animation-duration: 1s;
    animation-delay: 0.6s;
    animation-fill-mode: forwards;
    opacity: 0;
}
@keyframes bgextendAnimeSecond {
0% {
opacity: 0;
}
100% {
opacity: 1;
}
}
/*左から右*/
.bgLRextend::before {
    animation-name: bgLRextendAnime;
    animation-duration: 1s;
    animation-fill-mode: forwards;
    content: "";
    position: absolute;
    width: 100%;
    height: 100%;
    background-color: #666;/*伸びる背景色の設定*/
}
@keyframes bgLRextendAnime {
0% {
transform-origin:left;
transform:scaleX(0);
}
50% {
transform-origin:left;
transform:scaleX(1);
}
50.001% {
transform-origin:right;
}
100% {
transform-origin:right;
transform:scaleX(0);
}
}
/* スクロールをしたら出現する要素にはじめに透過0を指定　*/
.bgappearTrigger, .bgLRextendTrigger {
    opacity: 0;
}

.bgextend{
	animation-name:bgextendAnimeBase;
	animation-duration:1s;
	animation-fill-mode:forwards;
	position: relative;
	overflow: hidden;/*　はみ出た色要素を隠す　*/
	opacity:0;
}

@keyframes bgextendAnimeBase{
  from {
    opacity:0;
  }

  to {
    opacity:1;  
}
}

/*中の要素*/
.bgappear{
	animation-name:bgextendAnimeSecond;
	animation-duration:3s;
	animation-delay: 0.6s;
	animation-fill-mode:forwards;
    background: var(--black);
    color: var(--yellow);
    padding: 10px;
	opacity: 0;
}

@keyframes bgextendAnimeSecond{
	0% {
	opacity: 0;
	}
	100% {
	opacity: 1;
}
}

/*上から下*/
.bgUDextend::before{
	animation-name:bgUDextendAnime;
	animation-duration:3s;
	animation-fill-mode:forwards;
    content: "";
    position: absolute;
    width: 100%;
    height: 100%;
    padding: 10px;
    background-color: var(--black);/*伸びる背景色の設定*/
}
@keyframes bgUDextendAnime{
	0% {
		transform-origin:top;
		transform:scaleY(0);
	}
	50% {
		transform-origin:top;
		transform:scaleY(1);
	}
	50.001% {
		transform-origin:bottom;
	}
	100% {
		transform-origin:bottom;
		transform:scaleY(0);
	}
}

/* スクロールをしたら出現する要素にはじめに透過0を指定　*/
.bgappearTrigger,
.bgUDextendTrigger{
    opacity: 0;
}

.TextTyping span {
	display: none;
}

/*文字列後ろの線の設定*/
.TextTyping::after {
 	content: "|";
	animation: typinganime .8s ease infinite;
}

@keyframes typinganime{
	from{opacity:0}
	to{opacity:1}
}